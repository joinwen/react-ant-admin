@import "src/bootstrap/style/theme/variables";
$fontSize-map: (
  "xl": $fs-xl,
  "lg": $fs-lg,
  "md": $fs-md,
  "normal": $fs-normal,
  "sm": $fs-sm,
  "xs": $fs-xs
) !default;

@each $name, $value in $fontSize-map {
  .fs-#{$name} {
    font-size: $value;
  }
}

$fontWeight-map: (
  "thin": $fw-thin,
  "extra-light": $fw-extra-light,
  "light": $fw-light,
  "normal": $fw-normal,
  "medium": $fw-medium,
  "semi-bold": $fw-semi-bold,
  "bold": $fw-bold,
  "extra-bold": $fw-extra-bold,
  "bolder": $fw-bolder,
  "extra-bolder": $fw-extra-bolder
) !default;

@each $name, $value in $fontWeight-map {
  .fw-#{$name} {
    font-weight: $value;
  }
}
$space-map: (
  0: $space-0,
  0\.5: $space-xxs,
  1: $space-xs,
  1\.5: $space-sm,
  2: $space-normal,
  2\.5: $space-md,
  3: $space-lg,
  3\.5: $space-xl,
  4: $space-xxl
) !default;
$margin-map: (
  t: (margin-top),
  b: (margin-bottom),
  l: (margin-left),
  r: (margin-right),
  x: (margin-left,margin-right),
  y: (margin-top,margin-bottom),
  all: (margin)
) !default;
$padding-map: (
  t: (padding-top),
  b: (padding-bottom),
  l: (padding-left),
  r: (padding-right),
  x: (padding-left,padding-right),
  y: (padding-top,padding-bottom),
  all: (padding)
) !default;

@each $name, $value in $space-map {
  @each $direction, $directionList in $margin-map {
    @if $direction == all {
      .m-#{$name} {
        @each $prop in $direction {
          #{$prop}: $value;
        }
      }
    } @else {
      .m-#{$direction}-#{$name} {
        @each $prop in $directionList {
          #{$prop}: $value;
        }
      }
    }
  }
}

@each $name, $value in $space-map {
  @each $direction, $directionList in $padding-map {
    @if $direction == all {
      .p-#{$name} {
        @each $prop in $directionList {
          #{$prop}: $value;
        }
      }
    } @else {
      .p-#{$direction}-#{$name} {
        @each $prop in $directionList {
          #{$prop}: $value;
        }
      }
    }
  }
}
.ease-0\.5 {
  transition: all 0.2s ease-in-out;
}

.fl {
  float: left;
}
.fr {
  float: right;
}
.clearfix {
  *zoom: 1;
}
.clearfix:before,
.clearfix:after {
  display: block;
  line-height: 0;
}
.clearfix:after {
  clear: both;
}

.middle {
  vertical-align: middle;
}

.bg-white {
  background: #fff;
}
.tx-center {
  text-align: center;
}
/* shadow */
.shadow-basic {
  box-shadow: 0 2px 4px rgba(0, 0, 0, .12), 0 0 6px rgba(0, 0, 0, .04)
}

.shadow-basic-b {
  box-shadow: 0 2px 4px rgba(0, 0, 0, .12), 0 0 6px rgba(0, 0, 0, .04);
}

.shadow-light {
  box-shadow: 0 2px 12px 0 rgba(0, 0, 0, 0.1)
}

/* position */
.rl {
  position: relative;
}
.ab {
  position: absolute;
}
.ab-center {
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  margin: auto;
  text-align: center;
}

/* flex */
.flex {
  display: flex;
}
.inline-flex {
  display: inline-flex;
}

.flex-center {
  align-items: center;
  justify-content: center;
}

.inline-flex-center {
  align-items: center;
  justify-content: center;
}

/* events */
.events-none {
  pointer-events: none;
}

/**
  cursor
 */
.cursor {
  cursor: pointer;
}
.move {
  cursor: move;
}
