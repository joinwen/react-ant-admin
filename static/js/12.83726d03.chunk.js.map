{"version":3,"sources":["views/table/condition-table/assets/api/index.js","../node_modules/uuid/dist/esm-browser/rng.js","../node_modules/uuid/dist/esm-browser/regex.js","../node_modules/uuid/dist/esm-browser/stringify.js","../node_modules/uuid/dist/esm-browser/validate.js","../node_modules/uuid/dist/esm-browser/v4.js"],"names":["getDataApi","params","page","pageSize","len","content","Promise","resolve","reject","setTimeout","i","push","id","uuidv4","key","name","age","hobby","description","weight","height","status","address","flag","total","Math","random","addDataApi","getRandomValues","rnds8","Uint8Array","rng","crypto","bind","msCrypto","Error","validate","uuid","REGEX","test","byteToHex","toString","substr","stringify","arr","offset","arguments","length","undefined","toLowerCase","TypeError","v4","options","buf","rnds"],"mappings":"2HAAA,0GAIO,SAASA,EAAWC,GACrB,IACDC,EAAkBD,EAAlBC,KAAMC,EAAYF,EAAZE,SACPC,EAAMF,EAAOC,EAFH,GAEsBA,EAFtB,GAEyCA,EACnDE,EAAU,GACZ,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACT,IAAK,IAAIC,EAAI,EAAGA,EAAIN,EAAKM,IACvBL,EAAQM,KAAK,CACXC,GAAIC,cACJC,IAAKJ,EACLK,KAAM,qBACNC,IAAK,GACLC,MAAO,eACPC,YAAa,6CACbC,OAAQ,OACRC,OAAQ,MACRC,OAAQ,EACRC,QAAS,sDAGbf,EAAQ,CAAEgB,MAAM,EAAMlB,UAASmB,MApBvB,OAqBS,IAAhBC,KAAKC,aAOL,SAASC,IACd,OAAO,IAAIrB,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACTF,EAAQ,CAACgB,MAAM,MACE,IAAhBE,KAAKC,e,iCClCZ,IAAIE,EACAC,EAAQ,IAAIC,WAAW,IACZ,SAASC,IAEtB,IAAKH,KAGHA,EAAoC,qBAAXI,QAA0BA,OAAOJ,iBAAmBI,OAAOJ,gBAAgBK,KAAKD,SAA+B,qBAAbE,UAAgE,oBAA7BA,SAASN,iBAAkCM,SAASN,gBAAgBK,KAAKC,WAGrO,MAAM,IAAIC,MAAM,4GAIpB,OAAOP,EAAgBC,GCjBV,4HCQf,ICFeO,MAJf,SAAkBC,GAChB,MAAuB,kBAATA,GAAqBC,EAAMC,KAAKF,IDG5CG,EAAY,GAEP9B,EAAI,EAAGA,EAAI,MAAOA,EACzB8B,EAAU7B,MAAMD,EAAI,KAAO+B,SAAS,IAAIC,OAAO,IAoBlCC,MAjBf,SAAmBC,GACjB,IAAIC,EAASC,UAAUC,OAAS,QAAsBC,IAAjBF,UAAU,GAAmBA,UAAU,GAAK,EAG7ET,GAAQG,EAAUI,EAAIC,EAAS,IAAML,EAAUI,EAAIC,EAAS,IAAML,EAAUI,EAAIC,EAAS,IAAML,EAAUI,EAAIC,EAAS,IAAM,IAAML,EAAUI,EAAIC,EAAS,IAAML,EAAUI,EAAIC,EAAS,IAAM,IAAML,EAAUI,EAAIC,EAAS,IAAML,EAAUI,EAAIC,EAAS,IAAM,IAAML,EAAUI,EAAIC,EAAS,IAAML,EAAUI,EAAIC,EAAS,IAAM,IAAML,EAAUI,EAAIC,EAAS,KAAOL,EAAUI,EAAIC,EAAS,KAAOL,EAAUI,EAAIC,EAAS,KAAOL,EAAUI,EAAIC,EAAS,KAAOL,EAAUI,EAAIC,EAAS,KAAOL,EAAUI,EAAIC,EAAS,MAAMI,cAMzf,IAAKb,EAASC,GACZ,MAAMa,UAAU,+BAGlB,OAAOb,GEHMc,IApBf,SAAYC,EAASC,EAAKR,GAExB,IAAIS,GADJF,EAAUA,GAAW,IACF1B,SAAW0B,EAAQrB,KAAOA,KAK7C,GAHAuB,EAAK,GAAe,GAAVA,EAAK,GAAY,GAC3BA,EAAK,GAAe,GAAVA,EAAK,GAAY,IAEvBD,EAAK,CACPR,EAASA,GAAU,EAEnB,IAAK,IAAInC,EAAI,EAAGA,EAAI,KAAMA,EACxB2C,EAAIR,EAASnC,GAAK4C,EAAK5C,GAGzB,OAAO2C,EAGT,OAAOV,EAAUW","file":"static/js/12.83726d03.chunk.js","sourcesContent":["import { v4 as uuidv4 } from \"uuid\";\r\n/**\r\n * 获取页面数据 API\r\n */\r\nexport function getDataApi(params) {\r\n  let total = 65,\r\n    {page, pageSize} = params,\r\n    len = page * pageSize < total ? pageSize : total % pageSize,\r\n    content = [];\r\n  return new Promise((resolve, reject) => {\r\n    setTimeout(() => {\r\n      for (let i = 0; i < len; i++) {\r\n        content.push({\r\n          id: uuidv4(),\r\n          key: i,\r\n          name: \"胡彦斌\",\r\n          age: 32,\r\n          hobby: \"足球\",\r\n          description: \"一段简单的介绍\",\r\n          weight: \"60kg\",\r\n          height: \"179\",\r\n          status: 2,\r\n          address: \"西湖区湖底公园1号\",\r\n        });\r\n      }\r\n      resolve({ flag: true, content, total });\r\n    }, Math.random() * 3000);\r\n  });\r\n}\r\n\r\n/**\r\n * 添加数据 API\r\n */\r\nexport function addDataApi() {\r\n  return new Promise((resolve, reject) => {\r\n    setTimeout(() => {\r\n      resolve({flag: true});\r\n    }, Math.random() * 3000);\r\n  });\r\n}\r\n","// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nvar getRandomValues;\nvar rnds8 = new Uint8Array(16);\nexport default function rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation. Also,\n    // find the complete implementation of crypto (msCrypto) on IE11.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto) || typeof msCrypto !== 'undefined' && typeof msCrypto.getRandomValues === 'function' && msCrypto.getRandomValues.bind(msCrypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}","export default /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;","import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nvar byteToHex = [];\n\nfor (var i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).substr(1));\n}\n\nfunction stringify(arr) {\n  var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  var uuid = (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase(); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;","import REGEX from './regex.js';\n\nfunction validate(uuid) {\n  return typeof uuid === 'string' && REGEX.test(uuid);\n}\n\nexport default validate;","import rng from './rng.js';\nimport stringify from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  options = options || {};\n  var rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (var i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return stringify(rnds);\n}\n\nexport default v4;"],"sourceRoot":""}