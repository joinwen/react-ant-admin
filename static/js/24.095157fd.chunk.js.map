{"version":3,"sources":["views/chart/echarts/line/Line.js","components/base-chart/BaseChart.js"],"names":["Line","BaseChart","registerTheme","theme","options","title","text","tooltip","trigger","grid","left","right","bottom","containLabel","toolbox","feature","saveAsImage","xAxis","type","boundaryGap","data","yAxis","series","name","stack","smooth","symbol","props","chartRef","useRef","useEffect","chart","echarts","init","current","setOption","addListener","resize","className","ref","registerMap"],"mappings":"y8JAAA,oCA6EeA,UA3Ef,WAuEE,OADAC,IAAUC,cAAc,KAAMC,GAE5B,cAAC,IAAD,CAAWC,QAvEG,CACdC,MAAO,CACLC,KAAM,kCAERC,QAAS,CACPC,QAAS,QAEXC,KAAM,CACJC,KAAM,KACNC,MAAO,KACPC,OAAQ,KACRC,cAAc,GAEhBC,QAAS,CACPC,QAAS,CACPC,YAAa,KAGjBC,MAAO,CACLC,KAAM,WACNC,aAAa,EACbC,KAAM,CAAC,eAAM,eAAM,eAAM,eAAM,eAAM,eAAM,iBAE7CC,MAAO,CACLH,KAAM,SAERI,OAAQ,CACN,CACEC,KAAM,2BACNL,KAAM,OACNM,MAAO,eACPC,QAAQ,EACRC,OAAQ,OACRN,KAAM,CAAC,IAAK,IAAK,IAAK,IAAK,GAAI,IAAK,MAEtC,CACEG,KAAM,2BACNL,KAAM,OACNM,MAAO,eACPC,QAAQ,EACRC,OAAQ,OACRN,KAAM,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,MAEvC,CACEG,KAAM,2BACNL,KAAM,OACNM,MAAO,eACPC,QAAQ,EACRC,OAAQ,OACRN,KAAM,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,MAEvC,CACEG,KAAM,2BACNL,KAAM,OACNM,MAAO,eACPC,QAAQ,EACRC,OAAQ,OACRN,KAAM,CAAC,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,MAEvC,CACEG,KAAM,2BACNL,KAAM,OACNM,MAAO,eACPC,QAAQ,EACRC,OAAQ,OACRN,KAAM,CAAC,IAAK,IAAK,IAAK,IAAK,KAAM,KAAM,SAMdjB,MAAM,S,iCC1EvC,oDAKA,SAASF,EAAU0B,GACjB,IAAIvB,EAAUuB,EAAMvB,QAClBD,EAAQwB,EAAMxB,MACdyB,EAAWC,iBAAO,MAQpB,OAPAC,qBAAU,WACR,IAAIC,EAAQC,IAAQC,KAAKL,EAASM,QAAS/B,GAC3C4B,EAAMI,UAAU/B,GAChBgC,YAAYR,EAASM,SAAQ,WAC3BH,EAAMM,eAIR,qBAAKC,UAAU,aAAaC,IAAKX,EAAjC,SACE,2CAIN3B,EAAUC,cAAgB,SAACqB,EAAMpB,GAC/B6B,IAAQ9B,cAAcqB,EAAMpB,IAE9BF,EAAUuC,YAAc,SAACjB,EAAMpB,GAC7B6B,IAAQQ,YAAYjB,EAAMpB,IAEbF,O","file":"static/js/24.095157fd.chunk.js","sourcesContent":["import BaseChart from \"../../../../components/base-chart/BaseChart\";\r\nimport theme from \"../assets/theme.json\";\r\nfunction Line() {\r\n  const options = {\r\n    title: {\r\n      text: \"折线图堆叠\",\r\n    },\r\n    tooltip: {\r\n      trigger: \"axis\",\r\n    },\r\n    grid: {\r\n      left: \"3%\",\r\n      right: \"4%\",\r\n      bottom: \"3%\",\r\n      containLabel: true,\r\n    },\r\n    toolbox: {\r\n      feature: {\r\n        saveAsImage: {},\r\n      },\r\n    },\r\n    xAxis: {\r\n      type: \"category\",\r\n      boundaryGap: false,\r\n      data: [\"周一\", \"周二\", \"周三\", \"周四\", \"周五\", \"周六\", \"周日\"],\r\n    },\r\n    yAxis: {\r\n      type: \"value\",\r\n    },\r\n    series: [\r\n      {\r\n        name: \"邮件营销\",\r\n        type: \"line\",\r\n        stack: \"总量\",\r\n        smooth: true,\r\n        symbol: \"none\",\r\n        data: [120, 132, 101, 134, 90, 230, 210],\r\n      },\r\n      {\r\n        name: \"联盟广告\",\r\n        type: \"line\",\r\n        stack: \"总量\",\r\n        smooth: true,\r\n        symbol: \"none\",\r\n        data: [220, 182, 191, 234, 290, 330, 310],\r\n      },\r\n      {\r\n        name: \"视频广告\",\r\n        type: \"line\",\r\n        stack: \"总量\",\r\n        smooth: true,\r\n        symbol: \"none\",\r\n        data: [150, 232, 201, 154, 190, 330, 410],\r\n      },\r\n      {\r\n        name: \"直接访问\",\r\n        type: \"line\",\r\n        stack: \"总量\",\r\n        smooth: false,\r\n        symbol: \"none\",\r\n        data: [320, 332, 301, 334, 390, 330, 320],\r\n      },\r\n      {\r\n        name: \"搜索引擎\",\r\n        type: \"line\",\r\n        stack: \"总量\",\r\n        smooth: true,\r\n        symbol: \"none\",\r\n        data: [820, 932, 901, 934, 1290, 1330, 1320],\r\n      },\r\n    ],\r\n  };\r\n  BaseChart.registerTheme(\"my\", theme);\r\n  return (\r\n    <BaseChart options={options} theme=\"my\" />\r\n  )\r\n}\r\nexport default Line;\r\n","import \"./BaseChart.scss\";\r\nimport { useRef } from \"react\";\r\nimport echarts from \"echarts\";\r\nimport { useEffect } from \"react\";\r\nimport { addListener } from \"resize-detector\";\r\nfunction BaseChart(props) {\r\n  let options = props.options,\r\n    theme = props.theme,\r\n    chartRef = useRef(null);\r\n  useEffect(() => {\r\n    let chart = echarts.init(chartRef.current, theme);\r\n    chart.setOption(options);\r\n    addListener(chartRef.current,() => {\r\n      chart.resize();\r\n    });\r\n  });\r\n  return (\r\n    <div className=\"base-chart\" ref={chartRef}>\r\n      <h2>echarts</h2>\r\n    </div>\r\n  );\r\n}\r\nBaseChart.registerTheme = (name, theme) => {\r\n  echarts.registerTheme(name, theme);\r\n};\r\nBaseChart.registerMap = (name, theme) => {\r\n  echarts.registerMap(name, theme);\r\n};\r\nexport default BaseChart;\r\n"],"sourceRoot":""}